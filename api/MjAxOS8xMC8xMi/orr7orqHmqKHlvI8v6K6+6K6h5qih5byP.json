{"title":"JS 设计模式","date":"2019-10-12T02:57:12.535Z","link":"2019/10/12/设计模式/设计模式","tags":["JS","设计模式"],"categories":["JS 设计模式"],"updated":"2019-10-16T09:43:35.099Z","content":"<h2 id=\"概述\">概述<a href=\"2019/10/12/设计模式/设计模式#概述\"></a></h2><p><strong>js的设计模式总共有23种，总体来说设计模式分为三大类：</strong></p>\n<p>1、创建型模式 共五种：工厂方法模式、抽象工厂模式、建造者模式、单例模式、原型模式。<br>2、结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。<br>3、行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</p>\n<h2 id=\"常用的设计模式\">常用的设计模式<a href=\"2019/10/12/设计模式/设计模式#常用的设计模式\"></a></h2><p>工厂方法模式、单例模式、适配器模式、组合模式、迭代子模式</p>\n<h3 id=\"工厂方法模式\">工厂方法模式<a href=\"2019/10/12/设计模式/设计模式#工厂方法模式\"></a></h3><h4 id=\"介绍\">介绍<a href=\"2019/10/12/设计模式/设计模式#介绍\"></a></h4><ul>\n<li>将 new 操作单独封装。</li>\n<li>遇到 new 时，就要考虑是否该使用工厂模式。</li>\n</ul>\n<h4 id=\"示例\">示例<a href=\"2019/10/12/设计模式/设计模式#示例\"></a></h4><ul>\n<li>你去购买汉堡，直接点餐、取餐，不会自己亲手做。</li>\n<li>商店要封装做汉堡的工作，做好直接给顾客。</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Product &#123;</span><br><span class=\"line\">    constructor(name)&#123;</span><br><span class=\"line\">        this.name = name;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">init</span></span>()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">buy</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> this.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># //工厂</span></span><br><span class=\"line\">class Store &#123;</span><br><span class=\"line\">    create(name)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> new Product(name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const store = new Store();  </span><br><span class=\"line\">const product = store.create(<span class=\"string\">'干脆面'</span>)</span><br><span class=\"line\">product.buy()</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"场景\">场景<a href=\"2019/10/12/设计模式/设计模式#场景\"></a></h4><ul>\n<li>jQuery 实例<br><a href=\"/2019/10/14/js-面向对象#实例\">$(‘div’)</a></li>\n</ul>\n<ul>\n<li>React.createElement</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Vnode(tag, attrs, children) &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 省略内部代码...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">React.createElement = <span class=\"keyword\">function</span>(tag, attrs, children)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> new Vnode(tag, attrs, children)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 调用</span></span><br><span class=\"line\">React.createElement(<span class=\"string\">'div'</span>,null,</span><br><span class=\"line\">    React.createElement(<span class=\"string\">'img'</span>,&#123;src:<span class=\"string\">'header.png'</span>&#125;)</span><br><span class=\"line\">    React.createElement(<span class=\"string\">'h3'</span>,null,<span class=\"string\">'h3标题就是我'</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></div></figure>\n\n<ul>\n<li>vue 异步组件</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">'component-name'</span>,<span class=\"keyword\">function</span>(resolve, reject)&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        resolve(&#123;</span><br><span class=\"line\">            template : <span class=\"string\">'&lt;div&gt;I am async!&lt;/div&gt;'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;,1000)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"单例模式\">单例模式<a href=\"2019/10/12/设计模式/设计模式#单例模式\"></a></h3><h4 id=\"介绍-1\">介绍<a href=\"2019/10/12/设计模式/设计模式#介绍-1\"></a></h4><ul>\n<li>系统中被唯一使用</li>\n<li>一个类只能初始化一个实例</li>\n</ul>\n<h4 id=\"示例-1\">示例<a href=\"2019/10/12/设计模式/设计模式#示例-1\"></a></h4><ul>\n<li>登陆框</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class SingleObject &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">login</span></span>() &#123;</span><br><span class=\"line\">        console.log(<span class=\"string\">'login...'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">SingleObject.getInstance = (<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">let</span> instance;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> instance?instance:instance = new SingleObject()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"><span class=\"comment\"># 调用</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> obj1 = SingleObject.getInstance()</span><br><span class=\"line\"><span class=\"built_in\">let</span> obj2 = SingleObject.getInstance()</span><br><span class=\"line\">console.log(obj1 === obj2) //<span class=\"literal\">true</span></span><br></pre></td></tr></table></div></figure>\n\n<ul>\n<li>购物车</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">creat</span></span>()&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"场景-1\">场景<a href=\"2019/10/12/设计模式/设计模式#场景-1\"></a></h4><h3 id=\"适配器模式\">适配器模式<a href=\"2019/10/12/设计模式/设计模式#适配器模式\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">creat</span></span>()&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"组合模式\">组合模式<a href=\"2019/10/12/设计模式/设计模式#组合模式\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">creat</span></span>()&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"迭代子模式\">迭代子模式<a href=\"2019/10/12/设计模式/设计模式#迭代子模式\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">creat</span></span>()&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>","prev":{"title":"JS - 面向对象","link":"2019/10/14/js-面向对象"},"plink":"yibaobeiya.github.io/2019/10/12/设计模式/设计模式/","toc":[{"title":"概述","id":"概述","index":"1"},{"title":"常用的设计模式","id":"常用的设计模式","index":"2","children":[{"title":"工厂方法模式","id":"工厂方法模式","index":"2.1","children":[{"title":"介绍","id":"介绍","index":"2.1.1"},{"title":"示例","id":"示例","index":"2.1.2"},{"title":"场景","id":"场景","index":"2.1.3"}]},{"title":"单例模式","id":"单例模式","index":"2.2","children":[{"title":"介绍","id":"介绍-1","index":"2.2.1"},{"title":"示例","id":"示例-1","index":"2.2.2"},{"title":"场景","id":"场景-1","index":"2.2.3"}]},{"title":"适配器模式","id":"适配器模式","index":"2.3"},{"title":"组合模式","id":"组合模式","index":"2.4"},{"title":"迭代子模式","id":"迭代子模式","index":"2.5"}]}]}